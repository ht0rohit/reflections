How did viewing a diff between two versions of a file help you see the bug 
that was introduced?

  It helped me to find out the changes that we have made to the file & 
hence, the typo in the original content.

How could having easy access to the entire history of a file make you a 
more efficient programmer in the long term?

  In future, if we have written some wrong code & like to change it to the 
way it was, easy access to entire history would play a bigger role. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like 
Google docs does?

  Manually choosing when to create a commit prevents versions to save when 
any illogical change is made & also saves time while tracking the changes. 

Why do you think some version control systems, like Git, allow saving 
multiple files in one commit, while others, like Google Docs, treat each 
file separately?

  Saving multiple files in one commit allows us to track the changes that 
would occur in the other files due to effect of changes in any file.

How can you use the commands git log and git diff to view the history of 
files?

  'git log' allows us to view the commits made per change of a file & 
'git diff' allows to to compare those commits for the changes made in one 
commit from the other.   

How might using version control make you more confident to make changes 
that could break something?

  I am now not worried to make changes to a code while learning programming as I could track any bugs if introduced & restore the file.

Now that you have your workspace set up, what do you want to try using Git 
for?

  As a web developer, I would like to compare my recent changes to a html 
program & learn how I could improve it.
